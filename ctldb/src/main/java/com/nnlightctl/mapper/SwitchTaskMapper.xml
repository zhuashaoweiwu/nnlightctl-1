<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nnlightctl.dao.SwitchTaskMapper" >
  <resultMap id="BaseResultMap" type="com.nnlightctl.po.SwitchTask" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="gmt_created" property="gmtCreated" jdbcType="TIMESTAMP" />
    <result column="gmt_updated" property="gmtUpdated" jdbcType="TIMESTAMP" />
    <result column="switch_name" property="switchName" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="is_lighton" property="isLighton" jdbcType="TINYINT" />
    <result column="is_usebeam" property="isUsebeam" jdbcType="TINYINT" />
    <result column="period" property="period" jdbcType="TINYINT" />
    <result column="light_percent" property="lightPercent" jdbcType="TINYINT" />
  </resultMap>

  <resultMap id="getSwitchTaskInfo"  type="com.nnlightctl.po.SwitchTask" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="gmt_created" property="gmtCreated" jdbcType="TIMESTAMP" />
    <result column="gmt_updated" property="gmtUpdated" jdbcType="TIMESTAMP" />
    <result column="switch_name" property="switchName" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="is_lighton" property="isLighton" jdbcType="TINYINT" />
    <result column="is_usebeam" property="isUsebeam" jdbcType="TINYINT" />
    <result column="period" property="period" jdbcType="TINYINT" />
    <result column="light_percent" property="lightPercent" jdbcType="TINYINT" />
    <collection property="infos" ofType="com.nnlightctl.po.SwitchTaskInfo">
      <result column="begin_time" property="beginTime"/>
      <result column="sti_lightPercent" property="lightPercent"/>
      <result column="sti_id" property="id"/>
    </collection>
  </resultMap>


  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, gmt_created, gmt_updated, switch_name, start_time, end_time, is_lighton, is_usebeam, 
    period, light_percent
  </sql>
  <sql id="Switch_Task_Info" >
     nst.id, nst.gmt_created, nst.gmt_updated, nst.switch_name, nst.start_time, nst.end_time, nst.is_lighton, nst.is_usebeam,
     nst.period, nst.light_percent ,nsti.begin_time , nsti.light_percent  as sti_lightPercent,nsti.id as sti_id
  </sql>


  <select id="selectByExample" resultMap="getSwitchTaskInfo" parameterType="com.nnlightctl.po.SwitchTaskExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Switch_Task_Info" />
    from nnlightctl_switch_task nst  LEFT JOIN nnlightctl_switch_task_info nsti on nst.id = nsti.switch_task_id
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>




  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from nnlightctl_switch_task
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from nnlightctl_switch_task
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.nnlightctl.po.SwitchTaskExample" >
    delete from nnlightctl_switch_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nnlightctl.po.SwitchTask" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into nnlightctl_switch_task (gmt_created, gmt_updated, switch_name, 
      start_time, end_time, is_lighton, 
      is_usebeam, period, light_percent
      )
    values (#{gmtCreated,jdbcType=TIMESTAMP}, #{gmtUpdated,jdbcType=TIMESTAMP}, #{switchName,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{isLighton,jdbcType=TINYINT}, 
      #{isUsebeam,jdbcType=TINYINT}, #{period,jdbcType=TINYINT}, #{lightPercent,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.nnlightctl.po.SwitchTask" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into nnlightctl_switch_task
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="gmtCreated != null" >
        gmt_created,
      </if>
      <if test="gmtUpdated != null" >
        gmt_updated,
      </if>
      <if test="switchName != null" >
        switch_name,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="isLighton != null" >
        is_lighton,
      </if>
      <if test="isUsebeam != null" >
        is_usebeam,
      </if>
      <if test="period != null" >
        period,
      </if>
      <if test="lightPercent != null" >
        light_percent,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="gmtCreated != null" >
        #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdated != null" >
        #{gmtUpdated,jdbcType=TIMESTAMP},
      </if>
      <if test="switchName != null" >
        #{switchName,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isLighton != null" >
        #{isLighton,jdbcType=TINYINT},
      </if>
      <if test="isUsebeam != null" >
        #{isUsebeam,jdbcType=TINYINT},
      </if>
      <if test="period != null" >
        #{period,jdbcType=TINYINT},
      </if>
      <if test="lightPercent != null" >
        #{lightPercent,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nnlightctl.po.SwitchTaskExample" resultType="java.lang.Integer" >
    select count(*) from nnlightctl_switch_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update nnlightctl_switch_task
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.gmtCreated != null" >
        gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtUpdated != null" >
        gmt_updated = #{record.gmtUpdated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.switchName != null" >
        switch_name = #{record.switchName,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isLighton != null" >
        is_lighton = #{record.isLighton,jdbcType=TINYINT},
      </if>
      <if test="record.isUsebeam != null" >
        is_usebeam = #{record.isUsebeam,jdbcType=TINYINT},
      </if>
      <if test="record.period != null" >
        period = #{record.period,jdbcType=TINYINT},
      </if>
      <if test="record.lightPercent != null" >
        light_percent = #{record.lightPercent,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update nnlightctl_switch_task
    set id = #{record.id,jdbcType=BIGINT},
      gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      gmt_updated = #{record.gmtUpdated,jdbcType=TIMESTAMP},
      switch_name = #{record.switchName,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      is_lighton = #{record.isLighton,jdbcType=TINYINT},
      is_usebeam = #{record.isUsebeam,jdbcType=TINYINT},
      period = #{record.period,jdbcType=TINYINT},
      light_percent = #{record.lightPercent,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nnlightctl.po.SwitchTask" >
    update nnlightctl_switch_task
    <set >
      <if test="gmtCreated != null" >
        gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdated != null" >
        gmt_updated = #{gmtUpdated,jdbcType=TIMESTAMP},
      </if>
      <if test="switchName != null" >
        switch_name = #{switchName,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isLighton != null" >
        is_lighton = #{isLighton,jdbcType=TINYINT},
      </if>
      <if test="isUsebeam != null" >
        is_usebeam = #{isUsebeam,jdbcType=TINYINT},
      </if>
      <if test="period != null" >
        period = #{period,jdbcType=TINYINT},
      </if>
      <if test="lightPercent != null" >
        light_percent = #{lightPercent,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nnlightctl.po.SwitchTask" >
    update nnlightctl_switch_task
    set gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      gmt_updated = #{gmtUpdated,jdbcType=TIMESTAMP},
      switch_name = #{switchName,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      is_lighton = #{isLighton,jdbcType=TINYINT},
      is_usebeam = #{isUsebeam,jdbcType=TINYINT},
      period = #{period,jdbcType=TINYINT},
      light_percent = #{lightPercent,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>